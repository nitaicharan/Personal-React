{"version":3,"sources":["constants/PostsPreviewConstants.ts","components/Header/Header.tsx","services/axiosConfig.ts","actions/PostsPreviewActions.ts","constants/SettingsConstants.ts","thunk/PostsPreviewThunks.ts","services/PostsPreviewService.ts","components/PostsPreview/Preview/Preview.tsx","components/PostsPreview/PostsPreview.tsx","components/Home/Banner/Banner.tsx","components/Home/Home.tsx","components/Post/Form/Form.tsx","components/Post/Post.tsx","components/Profile/Banner/Banner.tsx","components/Profile/List/List.tsx","components/Profile/Profile.tsx","components/Settings/Form/Form.tsx","components/Settings/Title/Title.tsx","components/Settings/Settings.tsx","actions/SettingsActions.ts","constants/SignInConstants.ts","actions/SignInActions.ts","constants/SignUpConstants.ts","thunk/SignInThunks.ts","services/SignInService.ts","components/SignIn/Form/Form.tsx","components/SignIn/Title/Title.tsx","components/SignIn/SignIn.tsx","actions/SignUpActions.ts","thunk/SignUpThunks.ts","services/SignUpService.ts","components/SignUp/Form/Form.tsx","components/SignUp/Title/Title.tsx","components/SignUp/SignUp.tsx","modules/Layout/TopNavigation/TopNavigation.tsx","modules/Layout/Layout.tsx","modules/App/App.tsx","reportWebVitals.ts","reducers/PostsPreview.ts","reducers/SignInReducer.ts","reducers/SignUpReducer.ts","reducers/SettingsReducer.ts","store.ts","index.tsx"],"names":["PostsPreviewConstants","Header","image","className","to","exact","this","props","settings","id","src","alt","Component","connect","store","api","axios","create","baseURL","SettingsConstants","fetchPostsThunk","dispatch","type","POSTSPREVIEW","get","then","res","payload","data","POSTSPREVIEW_SUCCESS","catch","e","POSTSPREVIEW_FAILURE","Preview","author","username","Date","createdAt","toDateString","favoritesCount","slug","title","description","tagList","map","tag","PostsPreview","componentDidMount","render","articles","i","postsPreview","Banner","Home","Form","placeholder","rows","Post","bio","state","List","Profile","handleChange","setState","target","name","value","onChange","defaultValue","email","autoComplete","password","Title","Settings","SignInConstants","settingsAction","SETTINGS","settingsSuccessAction","SETTINGS_SUCCESS","SignUpConstants","signInThunk","user","SIGN_IN","signInAction","post","SIGN_IN_SUCCESS","SETTINGS_FAILURE","event","handleSubmit","preventDefault","onSubmit","SignIn","signUpThunk","SIGN_UP","signUpAction","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SignUp","TopNavigation","strict","path","component","Layout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","articlesCount","loading","reducer","action","SIGN_IN_FAILURE","reducers","combineReducers","allReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa69f933.chunk.js","sourcesContent":["export enum PostsPreviewConstants {\n    POSTSPREVIEW = 'HOME',\n    POSTSPREVIEW_SUCCESS = 'HOME SUCCESS',\n    POSTSPREVIEW_FAILURE = 'HOME FAILURE',\n}","import React, { Component } from 'react';\nimport { connect, MapStateToPropsParam } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { SettingsState } from '../../reducers/SettingsReducer';\nimport { State } from '../../store';\n\ninterface Props {\n    settings: SettingsState\n}\n\nclass Header extends Component<Props> {\n    image(image: string) {\n        return image || 'https://static.productionready.io/images/smiley-cyrus.jpg';\n    }\n\n    render() {\n        return (\n            <header className=\"navbar navbar-light\">\n                <nav className=\"container\">\n                    <NavLink to=\"/\" className=\"navbar-brand\">conduit</NavLink>\n\n                    <ul className=\"nav navbar-nav pull-xs-right\">\n                        <li className=\"nav-item\"><NavLink exact className=\"nav-link\" to=\"/\">Home</NavLink></li>\n                        {this.props.settings?.id && <li className=\"nav-item\"><NavLink className=\"nav-link ion-compose\" to=\"/new\">&nbsp;New Post</NavLink></li>}\n                        {this.props.settings?.id && <li className=\"nav-item\"><NavLink className=\"nav-link ion-gear-a\" to=\"/settings\">&nbsp;Settings</NavLink></li>}\n                        {this.props.settings?.id && <li className=\"nav-item\"><NavLink className=\"nav-link\" to=\"/profile\"><img src={this.image(this.props.settings.image)} className=\"user-pic\" alt=\"profile\" /></NavLink></li>}\n                        {!this.props.settings?.id && <li className=\"nav-item\"><NavLink className=\"nav-link\" to=\"/signin\">Sign In</NavLink></li>}\n                        {!this.props.settings?.id && <li className=\"nav-item\"><NavLink className=\"nav-link\" to=\"/signup\">Sign Up</NavLink></li>}\n                    </ul>\n                </nav>\n            </header>\n        );\n    }\n}\n\nconst mapStateToProps: MapStateToPropsParam<Props, {}, State> = (store: State) => ({\n    settings: store.settings,\n})\nexport default connect<Props, {}, {}, State>(mapStateToProps)(Header);\n","import axios from \"axios\";\n\nexport const api = axios.create({\n    baseURL: 'https://conduit.productionready.io/api',\n});","import { AnyAction } from \"redux\";\nimport { PostsPreviewConstants } from \"../constants/PostsPreviewConstants\";\nimport { PostsPreviewState } from \"../reducers/PostsPreview\";\n\nexport const postsPreviewAction = (): AnyAction => ({\n    type: PostsPreviewConstants.POSTSPREVIEW,\n});\n\nexport const postsPreviewSuccessAction = (payload: PostsPreviewState): AnyAction => ({\n    type: PostsPreviewConstants.POSTSPREVIEW_SUCCESS,\n    payload\n});\n\nexport const postsPreviewFailureAction = (): AnyAction => ({\n    type: PostsPreviewConstants.POSTSPREVIEW_FAILURE,\n});","export enum SettingsConstants {\n    SETTINGS = 'SETTINGS',\n    SETTINGS_SUCCESS = 'SETTINGS SUCCESS',\n    SETTINGS_FAILURE = 'SETTINGS FAILURE',\n}","import { AnyAction, Dispatch } from \"redux\";\nimport { fetchPosts } from '../services/PostsPreviewService';\nimport { postsPreviewAction, postsPreviewFailureAction, postsPreviewSuccessAction } from '../actions/PostsPreviewActions';\n\nexport const fetchPostsThunk = () => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        dispatch(postsPreviewAction());\n\n        fetchPosts()\n            .then(res => dispatch(postsPreviewSuccessAction(res.data)))\n            .catch(e => dispatch(postsPreviewFailureAction()));\n    };\n};","import { api } from \"./axiosConfig\";\n\nexport interface Filter {\n    limit?: number;\n    offse?: number;\n}\n\nexport const fetchPosts = () => api.get(`articles`);\n\nconst buildParams = (filter: Filter) => Object.keys(filter).reduce((obj, key, index) => `${key}=${Object.keys(filter)[index]}`, '?');","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Post } from '../../../models/Post'\n\nexport interface IProps extends Post {\n}\n\nclass Preview extends Component<IProps> {\n    render() {\n        return (\n            <div className=\"article-preview\">\n                <div className=\"article-meta\">\n                    <Link to={`/@${this.props.author.username}`}>\n                        <img src={this.props.author.image || 'https://static.productionready.io/images/smiley-cyrus.jpg'} alt={this.props.author.username} />\n                    </Link>\n\n                    <div className=\"info\">\n                        <Link className=\"author\" to={`/@${this.props.author.username}`}>{this.props.author.username}</Link>\n                        <span className=\"date\">{new Date(this.props.createdAt).toDateString()}</span>\n                    </div>\n                    <div className=\"pull-xs-right\">\n                        <button className=\"btn btn-sm btn-primary\"><i className=\"ion-heart\"></i> {this.props.favoritesCount}</button>\n                    </div>\n                </div>\n\n                <Link to={`/article/${this.props.slug}`} className=\"preview-link\">\n                    <h1>{this.props.title}</h1>\n                    <p>{this.props.description}</p>\n                    <span>Read more...</span>\n                    <ul className=\"tag-list\">{this.props.tagList.map(tag => <li className=\"tag-default tag-pill tag-outline\" key={tag}>{tag}</li>)}</ul>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default Preview\n","import React, { Component } from 'react';\nimport { connect, MapDispatchToPropsFunction, MapStateToPropsParam } from 'react-redux';\nimport { PostsPreviewState } from '../../reducers/PostsPreview';\nimport { State } from '../../store';\nimport { fetchPostsThunk } from '../../thunk/PostsPreviewThunks';\nimport Preview from './Preview/Preview';\n\ninterface IProps {\n    fetchPostsThunk: () => void;\n}\n\nclass PostsPreview extends Component<IProps & PostsPreviewState> {\n    componentDidMount = () => this.props.fetchPostsThunk()\n\n    render = () => (this.props.articles.map(i => <Preview {...i} />));\n}\n\nconst mapStateToProps: MapStateToPropsParam<PostsPreviewState, {}, State> = ({ postsPreview }) => ({ ...postsPreview });\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<IProps, {}> = (dispatch: any) => ({\n    fetchPostsThunk: () => dispatch(fetchPostsThunk()),\n});\n\nexport default connect<PostsPreviewState, IProps, {}, State>(mapStateToProps, mapDispatchToProps)(PostsPreview);","import React, { Component } from 'react';\n\nexport class Banner extends Component {\n    render() {\n        return (\n            <section className=\"banner\">\n                <div className=\"container\">\n                    <h1 className=\"logo-font\">conduit</h1>\n                    <p>A place to share your knowledge.</p>\n                </div>\n            </section>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport PostsPreview from '../PostsPreview/PostsPreview';\nimport { Banner } from './Banner/Banner';\n\nclass Home extends Component {\n  render() {\n    return (\n      <main className=\"home-page\">\n        <Banner />\n\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-9\">\n              <PostsPreview />\n            </div>\n            <div className=\"col-md-3\">Tags</div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react'\n\nclass Form extends Component {\n    render() {\n        return (\n            <form>\n                <fieldset>\n\n                    <fieldset className='form-group'>\n                        <input className='form-control form-control-lg' type='text' placeholder='Article Title' />\n                    </fieldset>\n\n                    <fieldset className='form-group'>\n                        <input className='form-control' type='text' placeholder=\"What's this article about?\" />\n                    </fieldset>\n\n                    <fieldset className='form-group'>\n                        <textarea className='form-control' rows={8} placeholder='Write your article (in markdown)' />\n                    </fieldset>\n\n                    <fieldset className='form-group'>\n                        <input className='form-control' type='text' placeholder='Enter tags' />\n                    </fieldset>\n\n                    <button className='btn btn-lg pull-xs-right btn-primary' type='button'>Publish Article</button>\n                </fieldset>\n            </form>\n        )\n    }\n}\n\nexport default Form\n","import React, { Component } from 'react'\nimport Form from './Form/Form'\n\nclass Post extends Component {\n    render() {\n        return (\n            <>\n                <main className='editor-page'>\n                    <section className='container page'>\n                        <div className='row'>\n                            <div className='col-md-10 offset-md-1 col-xs-12'>\n                                <Form />\n                            </div>\n                        </div>\n                    </section>\n                </main>\n            </>\n        )\n    }\n}\n\nexport default Post\n","import React, { Component } from 'react';\nimport { connect, MapStateToPropsParam } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { State } from '../../../store';\n\ninterface IProps {\n    username: string;\n    bio: string;\n    image: string;\n}\n\nclass Banner extends Component<IProps> {\n    render() {\n        const { username, bio, image } = this.props;\n\n        return (\n            <section className=\"user-info\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-xs-12 col-md-10 offset-md-1\">\n                            <img src={image || 'https://static.productionready.io/images/smiley-cyrus.jpg'} className=\"user-img\" alt=\"profile\" />\n                            <h4>{username}</h4>\n                            <p>{bio}</p>\n\n                            <Link to=\"/settings\" className=\"btn btn-sm btn-outline-secondary action-btn ion-gear-a\">&nbsp;Settings</Link>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\n\nconst mapStateToProps: MapStateToPropsParam<IProps, {}, State> = (state: State) => ({\n    username: state.settings.username,\n    bio: state.settings.bio,\n    image: state.settings.image,\n})\n\nexport default connect<IProps, {}, {}, State>(mapStateToProps)(Banner);\n","import React, { Component } from 'react'\n\nclass List extends Component {\n    render() {\n        return (\n            <section className=\"container\">\n                <div className=\"row\">\n\n                    <div className=\"col-xs-12 col-md-10 offset-md-1\">\n                        <div className=\"articles-toggle\">Post Toggle</div>\n                        Post\n                    </div>\n\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default List\n","import React, { Component } from 'react'\nimport Banner from './Banner/Banner'\nimport List from './List/List'\n\nclass Profile extends Component {\n    render() {\n        return (\n            <main className=\"profile-page\">\n                <Banner />\n                <List />\n            </main>\n        )\n    }\n}\n\nexport default Profile\n","import React, { ChangeEvent, Component } from 'react';\nimport { connect, MapStateToPropsParam } from 'react-redux';\nimport { SettingsState } from '../../../reducers/SettingsReducer';\nimport { State } from '../../../store';\n\ninterface IProps {\n    settings: SettingsState;\n}\n\nclass Form extends Component<IProps, SettingsState> {\n    handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    render() {\n        const { settings } = this.props;\n        return (\n            <form>\n                <fieldset>\n                    <fieldset className='form-group'>\n                        <input onChange={this.handleChange} defaultValue={settings.image} className='form-control' type='text' placeholder='URL of profile picture' />\n                    </fieldset>\n\n                    <fieldset className='form-group'>\n                        <input onChange={this.handleChange} defaultValue={settings.username} className='form-control form-control-lg' type='text' placeholder='Username' />\n                    </fieldset>\n\n                    <fieldset className='form-group'>\n                        <textarea onChange={this.handleChange} defaultValue={settings.bio} className='form-control form-control-lg' placeholder='Short bio about you' rows={8} />\n                    </fieldset>\n\n                    <fieldset className='form-group'>\n                        <input onChange={this.handleChange} defaultValue={settings.email} className='form-control form-control-lg' autoComplete='username' type='email' placeholder='Email' />\n                    </fieldset>\n\n                    <fieldset className='form-group'>\n                        <input onChange={this.handleChange} defaultValue={settings.password} className='form-control form-control-lg' type='password' autoComplete='current-password' placeholder='New Password' />\n                    </fieldset>\n\n                    <button className='btn btn-lg btn-primary pull-xs-right' type='submit'>Update Settings</button>\n                </fieldset>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps: MapStateToPropsParam<IProps, {}, State> = (state: State) => ({\n    settings: state.settings\n});\n\nexport default connect<IProps, {}, {}, State>(mapStateToProps)(Form);\n","import React, { Component } from 'react'\n\nclass Title extends Component {\n    render() {\n        return (<h1 className=\"text-xs-center\">Your Settings</h1>)\n    }\n}\n\nexport default Title\n","import React, { Component } from 'react'\nimport Form from './Form/Form'\nimport Title from './Title/Title'\n\nclass Settings extends Component {\n    render() {\n        return (\n            <>\n                <main className='settings-page'>\n                    <section className='container page'>\n                        <div className='row'>\n                            <div className='col-md-6 offset-md-3 col-xs-12'>\n                                <Title />\n                                <Form />\n                            </div>\n                        </div>\n                    </section>\n                </main>\n            </>\n        )\n    }\n}\n\nexport default Settings\n","import { AnyAction } from \"redux\";\nimport { SettingsConstants } from \"../constants/SettingsConstants\";\nimport { SettingsState } from \"../reducers/SettingsReducer\";\n\nexport const settingsAction = (payload: SettingsState): AnyAction => ({\n    type: SettingsConstants.SETTINGS,\n    payload,\n});\n\nexport const settingsSuccessAction = (): AnyAction => ({\n    type: SettingsConstants.SETTINGS_SUCCESS,\n});\n\nexport const settingsFailureAction = (): AnyAction => ({\n    type: SettingsConstants.SETTINGS_FAILURE,\n});","export enum SignInConstants {\n    SIGN_IN = 'SIGN_IN',\n    SIGN_IN_SUCCESS = 'SIGN_IN SUCCESS',\n    SIGN_IN_FAILURE = 'SIGN_IN FAILURE',\n}","import { SignInConstants } from \"../constants/SignInConstants\";\nimport { SignInState } from \"../reducers/SignInReducer\";\n\nexport const signInAction = (payload: SignInState) => ({ type: SignInConstants.SIGN_IN, payload });\nexport const signInSuccessAction = () => ({ type: SignInConstants.SIGN_IN_SUCCESS });\nexport const signInFailureAction = () => ({ type: SignInConstants.SIGN_IN_FAILURE });","export enum SignUpConstants {\n    SIGN_UP = 'SIGN_UP',\n    SIGN_UP_SUCCESS = 'SIGN_UP SUCCESS',\n    SIGN_UP_FAILURE = 'SIGN_UP FAILURE',\n}","import { settingsFailureAction } from './../actions/SettingsActions';\nimport { AnyAction, Dispatch } from \"redux\";\nimport { settingsAction, settingsSuccessAction } from \"../actions/SettingsActions\";\nimport { signInAction, signInSuccessAction } from \"../actions/SignInActions\";\nimport { SignInState } from \"../reducers/SignInReducer\";\nimport { signIn } from \"../services/SignInService\";\n\nexport const signInThunk = (payload: SignInState) => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        dispatch(signInAction(payload));\n\n        signIn(payload)\n            .then(res => dispatch(settingsAction(res.data.user)))\n            .then(() => dispatch(settingsSuccessAction()))\n            .then(() => dispatch(signInSuccessAction()))\n            .catch(e => dispatch(settingsFailureAction()));\n    };\n};","import { api } from \"./axiosConfig\";\nimport { SignInState } from \"../reducers/SignInReducer\";\n\nexport const signIn = (user: SignInState) => api.post('/users/login', { user });\n","import React, { ChangeEvent, Component, SyntheticEvent } from 'react';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { SignInState } from '../../../reducers/SignInReducer';\nimport { signInThunk } from '../../../thunk/SignInThunks';\n\ninterface IProps {\n    signInThunk: (payload: SignInState) => void;\n}\nclass Form extends Component<IProps, SignInState> {\n\n    handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            ...this.state,\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleSubmit = (event: SyntheticEvent) => {\n        this.props.signInThunk(this.state);\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <fieldset className='form-group'>\n                    <input onChange={this.handleChange} name=\"email\" className='form-control form-control-lg' type='email' placeholder='Email' />\n                </fieldset>\n\n                <fieldset className='form-group'>\n                    <input onChange={this.handleChange} name=\"password\" className='form-control form-control-lg' type='password' placeholder='Password' />\n                </fieldset>\n\n                <button className='btn btn-lg btn-primary pull-xs-right' type=\"submit\">Sign in</button>\n            </form >\n        )\n    };\n}\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<IProps, {}> = (dispatch: any) => ({\n    signInThunk: (payload: SignInState) => dispatch(signInThunk(payload)),\n});\n\nexport default connect<{}, IProps, {}>(null, mapDispatchToProps)(Form);","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nclass Title extends Component {\n    render() {\n        return (\n            <>\n                <h1 className='text-xs-center'>Sign In</h1>\n                <p className=\"text-xs-center\"><NavLink to=\"/signup\">Need an account?</NavLink></p>\n            </>\n        )\n\n    }\n}\n\nexport default Title\n","import React, { Component } from 'react'\nimport Form from './Form/Form'\nimport Title from './Title/Title'\n\nexport class SignIn extends Component {\n    render() {\n        return (\n            <>\n                <main className='auth-page'>\n                    <section className='container page'>\n                        <div className='row'>\n                            <div className='col-md-6 offset-md-3 col-xs-12'>\n                                <Title />\n                                <Form />\n                            </div>\n                        </div>\n                    </section>\n                </main>\n            </>\n        )\n    }\n}\n\nexport default SignIn\n","import { AnyAction } from \"redux\";\nimport { SignUpConstants } from \"../constants/SignUpConstants\";\nimport { SignUpState } from \"../reducers/SignUpReducer\";\n\nexport const signUpAction = (payload: SignUpState): AnyAction => ({ type: SignUpConstants.SIGN_UP, payload });\nexport const signUpSuccessAction = (): AnyAction => ({ type: SignUpConstants.SIGN_UP_SUCCESS });\nexport const signUpFailureAction = (): AnyAction => ({ type: SignUpConstants.SIGN_UP_FAILURE });","import { Dispatch } from \"react\";\nimport { AnyAction } from \"redux\";\nimport { settingsAction, settingsSuccessAction } from \"../actions/SettingsActions\";\nimport { signUpAction } from \"../actions/SignUpActions\";\nimport { SignUpState } from \"../reducers/SignUpReducer\";\nimport { signUp } from \"../services/SignUpService\";\nimport { signUpFailureAction, signUpSuccessAction } from './../actions/SignUpActions';\n\nexport const signUpThunk = (payload: SignUpState) => {\n    return (dispatch: Dispatch<AnyAction>) => {\n        dispatch(signUpAction(payload));\n\n        signUp(payload)\n            .then(res => dispatch(settingsAction(res.data.user)))\n            .then(() => dispatch(settingsSuccessAction()))\n            .then(() => dispatch(signUpSuccessAction()))\n            .catch(() => dispatch(signUpFailureAction()))\n    }\n}","import { api } from \"./axiosConfig\";\nimport { SignUpState } from \"../reducers/SignUpReducer\";\n\nexport const signUp = (user: SignUpState) => api.post('/users', { user });\n","import React, { ChangeEvent, Component, SyntheticEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { SignUpState } from '../../../reducers/SignUpReducer';\nimport { signUpThunk } from '../../../thunk/SignUpThunks';\n\ntype Props = {\n    signUpThunk: (payload: SignUpState) => void;\n}\nclass Form extends Component<Props, SignUpState> {\n\n    handleChange(event: ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            ...this.state,\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleSubmit = (event: SyntheticEvent) => {\n        this.props.signUpThunk(this.state);\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <fieldset>\n                    <fieldset className='form-group'>\n                        <input onChange={e => this.handleChange(e)} className='form-control form-control-lg' type='text' name='username' placeholder='Username' />\n                    </fieldset>\n\n                    <fieldset className='form-group'>\n                        <input onChange={e => this.handleChange(e)} className='form-control form-control-lg' type='email' name='email' placeholder='Email' />\n                    </fieldset>\n\n                    <fieldset className='form-group'>\n                        <input onChange={e => this.handleChange(e)} className='form-control form-control-lg' type='password' name='password' placeholder='Password' />\n                    </fieldset>\n\n                    <button className='btn btn-lg btn-primary pull-xs-right' type='submit'>Sign up</button>\n                </fieldset>\n            </form>\n        )\n    };\n}\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    signUpThunk: (payload: SignUpState) => dispatch(signUpThunk(payload))\n});\n\nexport default connect(null, mapDispatchToProps)(Form);","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport class Title extends Component {\n    render() {\n        return (\n            <>\n                <h1 className='text-xs-center'>Sign Up</h1>\n                <p className=\"text-xs-center\"><NavLink to=\"/signin\">Have an account?</NavLink></p>\n            </>\n        )\n\n    }\n}\n\nexport default Title\n","import React, { Component } from 'react'\nimport Form from './Form/Form'\nimport Title from './Title/Title'\n\nexport class SignUp extends Component {\n    render() {\n        return (\n            <>\n                <main className='auth-page'>\n                    <section className='container page'>\n                        <div className='row'>\n                            <div className='col-md-6 offset-md-3 col-xs-12'>\n                                <Title />\n                                <Form />\n                            </div>\n                        </div>\n                    </section>\n                </main>\n            </>\n        )\n    }\n}\n\nexport default SignUp\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from '../../../components/Header/Header';\nimport Home from '../../../components/Home/Home';\nimport Post from '../../../components/Post/Post';\nimport Profile from '../../../components/Profile/Profile';\nimport Settings from '../../../components/Settings/Settings';\nimport SignIn from '../../../components/SignIn/SignIn';\nimport SignUp from '../../../components/SignUp/SignUp';\nclass TopNavigation extends Component {\n    render() {\n        return (\n            <Router>\n                <Route strict path=\"/\" component={Header} />\n                <Switch>\n                    <Route path=\"/signin\" component={SignIn} />\n                    <Route path=\"/signup\" component={SignUp} />\n                    <Route path=\"/settings\" component={Settings} />\n                    <Route path=\"/new\" component={Post} />\n                    <Route path=\"/profile\" component={Profile} />\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default TopNavigation;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport TopNavigation from './TopNavigation/TopNavigation';\n\nclass Layout extends Component {\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/\">\n                        <TopNavigation />\n                    </Route>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default Layout;\n","import React from 'react';\nimport Layout from '../Layout/Layout';\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AnyAction, Reducer } from \"redux\";\nimport { PostsPreviewConstants } from \"../constants/PostsPreviewConstants\";\nimport { Post } from \"../models/Post\";\n\nexport interface PostsPreviewState {\n    articles: Post[];\n    articlesCount: number;\n    loading: boolean;\n}\n\nconst initialState: PostsPreviewState = {\n    articles: [],\n    articlesCount: 0,\n    loading: false,\n}\n\nconst reducer: Reducer<PostsPreviewState, AnyAction> = (state = initialState, action: AnyAction): PostsPreviewState => {\n    switch (action.type) {\n        case PostsPreviewConstants.POSTSPREVIEW:\n            return { ...state, loading: true };\n\n        case PostsPreviewConstants.POSTSPREVIEW_SUCCESS:\n        case PostsPreviewConstants.POSTSPREVIEW_SUCCESS:\n            return { ...state, ...action.payload, loading: false };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import { AnyAction, Reducer } from \"redux\";\nimport { SignInConstants } from \"../constants/SignInConstants\";\n\nexport type SignInState = {\n    email: string;\n    password: string;\n    [key: string]: any;\n}\n\nconst reducer: Reducer<SignInState, AnyAction> = (state = {} as SignInState, action: AnyAction): SignInState => {\n    switch (action.type) {\n        case SignInConstants.SIGN_IN:\n            return { ...state, ...action.payload, loading: true };\n\n        case SignInConstants.SIGN_IN_SUCCESS:\n        case SignInConstants.SIGN_IN_FAILURE:\n            return { ...state, loading: false };\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { AnyAction, Reducer } from \"redux\";\nimport { SignUpConstants } from \"../constants/SignUpConstants\";\n\nexport type SignUpState = {\n    username: string;\n    email: string;\n    password: string;\n    [key: string]: any;\n}\n\nconst reducer: Reducer<SignUpState, AnyAction> = (state = {} as SignUpState, action: AnyAction): SignUpState => {\n    switch (action.type) {\n        case SignUpConstants.SIGN_UP:\n            return { ...state, ...action.payload, loading: true };\n\n        case SignUpConstants.SIGN_UP_FAILURE:\n        case SignUpConstants.SIGN_UP_SUCCESS:\n            return { ...state, loading: false };\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { AnyAction, Reducer } from \"redux\";\nimport { SettingsConstants } from \"../constants/SettingsConstants\";\n\nexport type SettingsState = {\n    bio: string;\n    createdAt: Date;\n    email: string;\n    id: number\n    image: string;\n    token: string;\n    updatedAt: Date;\n    username: string;\n    loading: boolean;\n    password: string;\n}\n\nconst reducer: Reducer<SettingsState, AnyAction> = (state = {} as SettingsState, action: AnyAction): SettingsState => {\n    switch (action.type) {\n        case SettingsConstants.SETTINGS:\n            return { ...state, ...action.payload, loading: true };\n\n        case SettingsConstants.SETTINGS_SUCCESS:\n        case SettingsConstants.SETTINGS_FAILURE:\n            return { ...state, loading: false };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport * as allReducers from \"./reducers\";\nimport thunk from 'redux-thunk';\n\nconst reducers = combineReducers({ ...allReducers });\nexport const store = createStore(\n    reducers,\n    composeWithDevTools(\n        applyMiddleware(thunk),\n    ),\n);\n\nexport type State = ReturnType<typeof reducers>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './modules/App/App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}